[package]
name = "heapswap_core"
version = "0.1.0"
edition = "2021"

[dependencies]
# Local
#heapswap_protos = { path = "../protos" }
# Crypto
crypto-bigint.workspace = true
num-bigint.workspace = true
rand.workspace = true
blake3.workspace = true
chacha20poly1305.workspace = true
curve25519-dalek.workspace = true
ed25519-dalek.workspace = true
x25519-dalek.workspace = true
# Concurrency
futures.workspace = true
futures-util.workspace = true
tokio_with_wasm = { workspace = true, features = ["full"] }
# Networking
snow.workspace = true
#reqwest.workspace = true
#reqwest-websocket.workspace = true
# Encoding
base32.workspace = true
# Datastructures
bytes.workspace = true
priority-queue.workspace = true
dashmap.workspace = true
flume.workspace = true
# Serialization
serde.workspace = true
serde_bytes.workspace = true
bincode.workspace = true
#prost.workspace = true
# Misc
derive_more.workspace = true
zeroize.workspace = true
getset.workspace = true
timeit.workspace = true
num-traits.workspace = true
once_cell.workspace = true
chrono.workspace = true
strum.workspace = true
ordered-float.workspace = true
lazy_static.workspace = true
eyre.workspace = true
wasm-bindgen.workspace = true
tracing.workspace = true

[target.'cfg(target_arch = "wasm32")'.dependencies]
libp2p = { workspace = true, features = [
	#"gossipsub",
	#"identify",
	#"kad",
	#"ping",
	"request-response",
	"cbor",
	#"dns",
	#"mdns",
	#"tcp",
	"noise",
	"yamux",
	"macros",
	"ed25519",
	"wasm-bindgen",
	"websocket-websys",
	#"webtransport-websys"

] }
tracing-wasm.workspace = true

#libp2p-websocket-websys.workspace = true
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
libp2p = { workspace = true, features = [
	#"gossipsub",
	#"identify",
	#"kad",
	#"ping",
	"request-response",
	"cbor",
	#"dns",
	"mdns",
	"tcp",
	"noise",
	"yamux",
	"macros",
	"ed25519",
	"tokio",
	"websocket",
	"tls"
] }
tokio = { workspace = true, features = ["full"] }
